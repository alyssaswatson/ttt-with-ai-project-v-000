#!/usr/bin/env ruby

require_relative '../config/environment'

<<<<<<< HEAD

sleep(1)
puts "So 0, 1, or 2 players? P.S. 0 players will start 100 games with the computer as both players"
puts "In order to initialize the computer death match, input 'wargames',"
puts "otherwise input the number of desired players(1 or 2)"

Game.game_choice
=======
puts "What's Crack-a-lackin?"
 sleep(1)
 puts "So 0, 1, or 2 players? P.S. 0 players starts 100 matches between two computer sims."
 puts "In order to initialize the computer death match, input 'wargames',"
 puts "otherwise input the number of desired players(1 or 2)"

game_choice

 def self.game_choice(input = nil)
     puts "Please select wargames, 1, or 2"
     input = gets.chop
     if input == "wargames"
       counter = 0
       computer1 = 0
       computer2 = 0
       draws = 0
       until counter == 101 do
         new_game = self.wargames
         new_game.play
         puts "After #{counter} game(s) played: Computer 1 = #{computer1} - Computer 2 = #{computer2} - Cat's Game(s) = (#{counter})"
         counter += 1
         end
         self.ask
     elsif input == "1"
       puts "Would you like to go first or second?"
       input2 = gets.chop
       if input2 == "first"
         new_game = self.one_player1
         new_game.play
         self.ask
       elsif input2 == "second"
         new_game = self.one_player2
         new_game.play
         self.ask
       else
         puts "I'm sorry, I couldn't hear you. Please type either first or second."
         puts "Just kidding, you have to start over because you didn't listen. :p"
         self.game_choice(1)
         self.ask
       end
     elsif input == "2"
       puts "Enjoy! May the best player win!"
       new_game = self.new
       new_game.play
       self.ask
     else
       puts "No, no, no, you're lost again."
       self.game_choice
     end
   end

   def self.ask
     puts "Would You like to play again (Y/N)?"
     input = gets.chop
     if input.match(/[yY]/)
       self.game_choice
     elsif input.match(/[nN]/)
       exit
     else
       puts "Okie dokie then. I'll just act like you didn't say that and start over."
       self.ask
     end
   end
 
# input = ""
# until input == "exit"
#   puts "Welcome to Tic Tac Toe!"
#   puts "This is a two player game, but you may also play against the computer or watch the computer play itself."
#   puts "If you would like to leave type 'exit.'"
#   puts "How many people would like to play? (0, 1, or 2)"
#   input = gets.strip
#
#   if input == "exit" #Will exit out of program
#     exit
#   elsif input.to_i <= 3 && input.to_i >= 0
#     puts "Awesome! Lets get this game started!"
#     board = Board.new
#   elsif input.to_i >= 3 || input.to_i <= -1
#     puts "Sorry, that is not a vaild response, please enter if 0, 1, or 2 players would like to play."
#     input = gets.strip
#   end
#
#   if input == "0" #Computer VS Computer
#     first_player = Players::Computer.new("X")
#     second_player = Players::Computer.new("0")
#     game = Game.new(first_player, second_player, board)
#     board.display
#     game.play
#
#
#   elsif input == "1" #Computer VS Human
#     puts "Would you like to go first or second? (first/second)"
#     input = gets.strip
#     if input == "first"
#       first_player = Players::Human.new("X")
#       second_player = Players::Computer.new("0")
#       game = Game.new(first_player, second_player, board)
#       board.display
#       game.play
#     elsif input == "second"
#       first_player = Players::Computer.new("X")
#       second_player = Players::Human.new("O")
#       game = Game.new(first_player, second_player, board)
#       board.display
#       game.play
#     end
#
#
#   elsif input == "2" #Human VS Human
#     puts "The first player is 'X'! Enter a number 1-9 to designate where you would like to go."
#     game = Game.new
#     board.display
#     game.play
#   end
#
# end
>>>>>>> 3693f5fb0f40bc758d6305510ff582ee9a7d67fd
